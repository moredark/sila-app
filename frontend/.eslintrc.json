{
  "root": true,
  "parserOptions": {
    "ecmaVersion": 2020,
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true
    },
    "project": "./tsconfig.json"
  },
  "env": {
    "browser": true,
    "es6": true,
    "node": true
  },
  "plugins": [
    "@typescript-eslint",
    "react",
    "react-hooks",
    "import",
    "tailwindcss"
  ],
  "extends": [
    "next/core-web-vitals",
    "plugin:@typescript-eslint/recommended",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:import/recommended",
    "plugin:import/typescript",
    "plugin:tailwindcss/recommended",
    "prettier"
  ],
  "rules": {
    "react/react-in-jsx-scope": "off",
    "react/jsx-props-no-spreading": "off",
    "react/function-component-definition": "off",
    "react/prop-types": "off",
    "import/prefer-default-export": "off",
    "@typescript-eslint/no-unused-vars": [
      "warn",
      {
        "argsIgnorePattern": "^_"
      }
    ],
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/no-empty-interface": "off",
    "@typescript-eslint/no-require-imports": "off",
    "@typescript-eslint/no-empty-object-type": "off",  
    "import/no-named-as-default":"off",
    "tailwindcss/no-custom-classname":"off",
    "import/no-named-as-default-member": "off",
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "warn",
    "import/order": [
      "error",
      {
        "pathGroups": [
          {
            "pattern": "react",
            "group": "builtin",
            "position": "before"
          },
          {
            "pattern": "~shared/**",
            "group": "internal",
            "position": "before"
          },
          {
            "pattern": "~entities/**",
            "group": "internal",
            "position": "before"
          },
          {
            "pattern": "~features/**",
            "group": "internal",
            "position": "before"
          },
          {
            "pattern": "~widgets/**",
            "group": "internal",
            "position": "before"
          },
          {
            "pattern": "~pages/**",
            "group": "internal",
            "position": "before"
          }
        ],
        "pathGroupsExcludedImportTypes": [
          "builtin"
        ],
        "groups": [
          "builtin",
          "external",
          "internal",
          "parent",
          "sibling",
          "index"
        ],
        "newlines-between": "always",
        "alphabetize": {
          "order": "asc",
          "caseInsensitive": true
        }
      }
    ],
    "no-restricted-imports": [
      "error",
      {
        "patterns": [
          {
            "group": [
              "~shared/*/*/**",
              "~entities/*/**",
              "~features/*/**",
              "~widgets/*/**",
              "~pages/*/**",
              "~app/**"
            ],
            "message": "Direct access to the internal parts of the module is prohibited"
          },
          {
            "group": [
              "../**/shared",
              "../**/entities",
              "../**/features",
              "../**/widgets",
              "../**/pages",
              "../**/app"
            ],
            "message": "Prefer absolute imports instead of relative imports"
          }
        ]
      }
    ]
  },
  "settings": {
    "react": {
      "version": "detect"
    },
    "import/resolver": {
      "typescript": {}
    }
  },
  "overrides": [
    {
      "files": [
        "*.ts",
        "*.tsx"
      ],
      "parser": "@typescript-eslint/parser",
      "plugins": [
        "@typescript-eslint"
      ],
      "rules": {
        "react/require-default-props": "off",
        "@typescript-eslint/no-use-before-define": "off",
        "@typescript-eslint/no-throw-literal": "off",
        "react/jsx-max-props-per-line": [
          "error",
          {
            "maximum": 1,
            "when": "always"
          }
        ],
        "@typescript-eslint/naming-convention": [
          "error",
          {
            "selector": "variable",
            "format": [
              "camelCase",
              "PascalCase",
              "UPPER_CASE"
            ],
            "leadingUnderscore": "allow",
            "trailingUnderscore": "allow"
          }
        ],
        "import/extensions": [
          "error",
          "ignorePackages",
          {
            "": "never",
            "tsx": "never",
            "ts": "never"
          }
        ]
      }
    }
  ]
}
