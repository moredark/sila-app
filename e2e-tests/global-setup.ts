import { chromium, FullConfig } from "@playwright/test";
import path from "path";
import fs from "fs";

// –§–∞–π–ª, –≤ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—å—Å—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
const authFile = path.join(__dirname, "playwright/.auth/user.json");
const AUTH_FILE_TTL = 24 * 60 * 60 * 1000; // 24 —á–∞—Å–∞ –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—â–µ–Ω—ã –ª–∏ —Ç–µ—Å—Ç—ã –≤ CI —Å—Ä–µ–¥–µ
const isCI = process.env.CI === "true";

async function globalSetup(config: FullConfig) {
  console.log("üîß –ó–∞–ø—É—Å–∫ –≥–ª–æ–±–∞–ª—å–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏");
  console.log(`üåê –†–µ–∂–∏–º –∑–∞–ø—É—Å–∫–∞: ${isCI ? "CI/CD" : "–ª–æ–∫–∞–ª—å–Ω—ã–π"}`);

  const authDir = path.join(__dirname, "playwright/.auth");

  // –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
  if (!fs.existsSync(authDir)) {
    try {
      fs.mkdirSync(authDir, { recursive: true });
      console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: ${authDir}`);
    } catch (error) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ ${authDir}:`, error);

      // –í CI —Å—Ä–µ–¥–µ –ø—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å —Å –¥—Ä—É–≥–∏–º–∏ –ø—Ä–∞–≤–∞–º–∏
      if (isCI) {
        try {
          console.log("üîÑ –ü—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —Å sudo –≤ CI...");
          require("child_process").execSync(
            `mkdir -p ${authDir} && chmod -R 777 ${authDir}`
          );
          console.log(`‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å–æ–∑–¥–∞–Ω–∞ —á–µ—Ä–µ–∑ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã`);
        } catch (cmdError) {
          console.error(
            "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–∞–∂–µ —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É:",
            cmdError
          );
        }
      }
    }
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ñ–∞–π–ª –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∏ –µ–≥–æ –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å
  if (fs.existsSync(authFile)) {
    const stats = fs.statSync(authFile);
    const fileAge = Date.now() - stats.mtimeMs;

    // –ï—Å–ª–∏ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –Ω–µ —Å—Ç–∞—Ä—à–µ 24 —á–∞—Å–æ–≤, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
    if (fileAge < AUTH_FILE_TTL) {
      console.log(
        `‚úÖ –ù–∞–π–¥–µ–Ω –∞–∫—Ç—É–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (${Math.round(
          fileAge / 60000
        )} –º–∏–Ω—É—Ç)`
      );
      return;
    } else {
      console.log(
        `‚ö†Ô∏è –§–∞–π–ª –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —É—Å—Ç–∞—Ä–µ–ª (${Math.round(
          fileAge / 60000
        )} –º–∏–Ω—É—Ç), —Ç—Ä–µ–±—É–µ—Ç—Å—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ`
      );
    }
  } else {
    console.log("‚ÑπÔ∏è –§–∞–π–ª –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω, –≤—ã–ø–æ–ª–Ω—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é");
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
  const email = process.env.TEST_EMAIL;
  const password = process.env.TEST_PASSWORD;
  const baseUrl = process.env.BASE_URL || "https://sila-danila.ru";

  // –í—ã–≤–æ–¥–∏–º –æ—Ç–ª–∞–¥–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
  console.log(`üåê –ë–∞–∑–æ–≤—ã–π URL: ${baseUrl}`);
  console.log(`üìß TEST_EMAIL —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: ${email ? "–î–∞" : "–ù–ï–¢"}`);
  console.log(`üîë TEST_PASSWORD —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: ${password ? "–î–∞" : "–ù–ï–¢"}`);

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤ CI (–±–µ–∑ –∑–Ω–∞—á–µ–Ω–∏–π)
  if (isCI) {
    console.log("üîç –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤ CI:");
    Object.keys(process.env).forEach((key) => {
      if (
        !key.includes("PASSWORD") &&
        !key.includes("TOKEN") &&
        !key.includes("SECRET")
      ) {
        console.log(
          `   - ${key}: ${key.includes("EMAIL") ? "***" : process.env[key]}`
        );
      } else {
        console.log(`   - ${key}: ***`);
      }
    });
  }

  if (!email || !password) {
    console.error("‚ùå TEST_EMAIL –∏–ª–∏ TEST_PASSWORD –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤ .env");
    if (isCI) {
      console.error(
        "‚ö†Ô∏è –í CI —Å—Ä–µ–¥–µ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ —Å–µ–∫—Ä–µ—Ç—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤ GitHub Repository Settings"
      );
    }
    return;
  }

  console.log(`üîë –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${email}`);

  // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  const maxRetries = 3;
  let attempt = 0;
  let success = false;

  while (attempt < maxRetries && !success) {
    attempt++;
    console.log(`üîÑ –ü–æ–ø—ã—Ç–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ ${attempt}/${maxRetries}`);

    const browser = await chromium.launch();
    const context = await browser.newContext();
    const page = await context.newPage();

    try {
      // –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
      const loginUrl = `${baseUrl}/auth/login`;
      console.log(`üì± –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: ${loginUrl}`);
      await page.goto(loginUrl, { timeout: 30000 });
      await page.waitForLoadState("networkidle");

      // –í CI –¥–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
      if (isCI) {
        const screenshotPath = path.join(__dirname, "login-page.png");
        await page.screenshot({ path: screenshotPath });
        console.log(`üì∏ –°–¥–µ–ª–∞–Ω —Å–∫—Ä–∏–Ω—à–æ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ª–æ–≥–∏–Ω–∞: ${screenshotPath}`);
      }

      await page.getByRole("textbox", { name: "Email" }).fill(email);
      await page.getByRole("textbox", { name: "Password" }).fill(password);
      await page.getByRole("button", { name: "Login" }).click();

      // –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
      await page.waitForSelector("text=You have successfully logged", {
        timeout: 10000,
      });

      // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
      await context.storageState({ path: authFile });

      if (fs.existsSync(authFile)) {
        const size = fs.statSync(authFile).size;
        console.log(
          `‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞! –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ (${size} –±–∞–π—Ç)`
        );

        if (isCI) {
          console.log(`üìÇ –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: ${authFile}`);

          // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∞ –¥–ª—è CI
          try {
            fs.chmodSync(authFile, 0o666);
            console.log("‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è —Ñ–∞–π–ª–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏");
          } catch (chmodErr) {
            console.error("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∞–≤–∞ –Ω–∞ —Ñ–∞–π–ª:", chmodErr);
          }
        }

        success = true;
      } else {
        throw new Error("–§–∞–π–ª —Å–æ—Å—Ç–æ—è–Ω–∏—è –Ω–µ –±—ã–ª —Å–æ–∑–¥–∞–Ω");
      }
    } catch (error) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ ${attempt}:`, error);
      if (attempt === maxRetries) {
        console.error("‚õî –í—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∏—Å—á–µ—Ä–ø–∞–Ω—ã");
      }
    } finally {
      await browser.close();
    }
  }

  if (!success) {
    console.error("‚õî –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é");
  }
}

export default globalSetup;
