import { chromium, FullConfig } from "@playwright/test";
import path from "path";
import fs from "fs";

const authFile = path.join(__dirname, "playwright/.auth/user.json");
const AUTH_FILE_TTL = 24 * 60 * 60 * 1000; // 24 —á–∞—Å–∞ –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö

async function globalSetup(config: FullConfig) {
  console.log("üîß –ó–∞–ø—É—Å–∫ –≥–ª–æ–±–∞–ª—å–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏");

  const authDir = path.join(__dirname, "playwright/.auth");

  // –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
  if (!fs.existsSync(authDir)) {
    fs.mkdirSync(authDir, { recursive: true });
    console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: ${authDir}`);
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ñ–∞–π–ª –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∏ –µ–≥–æ –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å
  if (fs.existsSync(authFile)) {
    const stats = fs.statSync(authFile);
    const fileAge = Date.now() - stats.mtimeMs;

    // –ï—Å–ª–∏ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –Ω–µ —Å—Ç–∞—Ä—à–µ 24 —á–∞—Å–æ–≤, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
    if (fileAge < AUTH_FILE_TTL) {
      console.log(
        `‚úÖ –ù–∞–π–¥–µ–Ω –∞–∫—Ç—É–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (${Math.round(
          fileAge / 60000
        )} –º–∏–Ω—É—Ç)`
      );
      return;
    } else {
      console.log(
        `‚ö†Ô∏è –§–∞–π–ª –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —É—Å—Ç–∞—Ä–µ–ª (${Math.round(
          fileAge / 60000
        )} –º–∏–Ω—É—Ç), —Ç—Ä–µ–±—É–µ—Ç—Å—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ`
      );
    }
  } else {
    console.log("‚ÑπÔ∏è –§–∞–π–ª –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω, –≤—ã–ø–æ–ª–Ω—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é");
  }

  const email = process.env.TEST_EMAIL;
  const password = process.env.TEST_PASSWORD;
  const baseUrl = process.env.BASE_URL || "https://sila-danila.ru";

  if (!email || !password) {
    console.error("‚ùå TEST_EMAIL –∏–ª–∏ TEST_PASSWORD –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤ .env");
    return;
  }

  console.log(`üîë –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${email}`);
  console.log(`üåê URL: ${baseUrl}`);

  // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  const maxRetries = 3;
  let attempt = 0;
  let success = false;

  while (attempt < maxRetries && !success) {
    attempt++;
    console.log(`üîÑ –ü–æ–ø—ã—Ç–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ ${attempt}/${maxRetries}`);

    const browser = await chromium.launch();
    const context = await browser.newContext();
    const page = await context.newPage();

    try {
      // –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
      const loginUrl = `${baseUrl}/auth/login`;
      await page.goto(loginUrl, { timeout: 30000 });
      await page.waitForLoadState("networkidle");

      await page.getByRole("textbox", { name: "Email" }).fill(email);
      await page.getByRole("textbox", { name: "Password" }).fill(password);
      await page.getByRole("button", { name: "Login" }).click();

      // –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
      await page.waitForSelector("text=You have successfully logged", {
        timeout: 10000,
      });

      // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
      await context.storageState({ path: authFile });

      if (fs.existsSync(authFile)) {
        const size = fs.statSync(authFile).size;
        console.log(
          `‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞! –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ (${size} –±–∞–π—Ç)`
        );
        success = true;
      } else {
        throw new Error("–§–∞–π–ª —Å–æ—Å—Ç–æ—è–Ω–∏—è –Ω–µ –±—ã–ª —Å–æ–∑–¥–∞–Ω");
      }
    } catch (error) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ ${attempt}:`, error);
      if (attempt === maxRetries) {
        console.error("‚õî –í—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∏—Å—á–µ—Ä–ø–∞–Ω—ã");
      }
    } finally {
      await browser.close();
    }
  }

  if (!success) {
    console.error("‚õî –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é");
  }
}

export default globalSetup;
